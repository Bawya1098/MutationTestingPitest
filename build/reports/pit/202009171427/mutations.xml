<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>YearTest.java</sourceFile><mutatedClass>com.mutation.YearTest</mutatedClass><mutatedMethod>testYearDivBy100NotDivBy3IsNotLeapYear</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>YearTest.java</sourceFile><mutatedClass>com.mutation.YearTest</mutatedClass><mutatedMethod>testYearDivBy100NotDivBy400InCommonYear</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>YearTest.java</sourceFile><mutatedClass>com.mutation.YearTest</mutatedClass><mutatedMethod>testYearDivBy200NotDivBy400InCommonYear</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>YearTest.java</sourceFile><mutatedClass>com.mutation.YearTest</mutatedClass><mutatedMethod>testYearDivBy2NotDivBy4InCommonYear</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>YearTest.java</sourceFile><mutatedClass>com.mutation.YearTest</mutatedClass><mutatedMethod>testYearDivBy400InLeapYear</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>YearTest.java</sourceFile><mutatedClass>com.mutation.YearTest</mutatedClass><mutatedMethod>testYearDivBy400NotDivBy125IsLeapYear</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>YearTest.java</sourceFile><mutatedClass>com.mutation.YearTest</mutatedClass><mutatedMethod>testYearDivBy4And5InLeapYear</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>YearTest.java</sourceFile><mutatedClass>com.mutation.YearTest</mutatedClass><mutatedMethod>testYearDivBy4NotDivBy100InYear</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>YearTest.java</sourceFile><mutatedClass>com.mutation.YearTest</mutatedClass><mutatedMethod>testYearNotDivBy4InCommonYear</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Year.java</sourceFile><mutatedClass>com.mutation.Year</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>24</index><block>5</block><killingTest>com.mutation.YearTest.testYearDivBy400NotDivBy125IsLeapYear(com.mutation.YearTest)</killingTest><description>replaced return value with &#34;&#34; for com/mutation/Year::isLeapYear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Year.java</sourceFile><mutatedClass>com.mutation.Year</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTest>com.mutation.YearTest.testYearDivBy400NotDivBy125IsLeapYear(com.mutation.YearTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Year.java</sourceFile><mutatedClass>com.mutation.Year</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>1</block><killingTest>com.mutation.YearTest.testYearDivBy100NotDivBy400InCommonYear(com.mutation.YearTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Year.java</sourceFile><mutatedClass>com.mutation.Year</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>2</block><killingTest>com.mutation.YearTest.testYearDivBy400NotDivBy125IsLeapYear(com.mutation.YearTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Year.java</sourceFile><mutatedClass>com.mutation.Year</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTest>com.mutation.YearTest.testYearDivBy400NotDivBy125IsLeapYear(com.mutation.YearTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Year.java</sourceFile><mutatedClass>com.mutation.Year</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTest>com.mutation.YearTest.testYearDivBy100NotDivBy400InCommonYear(com.mutation.YearTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Year.java</sourceFile><mutatedClass>com.mutation.Year</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>8</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>com.mutation.YearTest.testYearDivBy400NotDivBy125IsLeapYear(com.mutation.YearTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Year.java</sourceFile><mutatedClass>com.mutation.Year</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>12</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Year.java</sourceFile><mutatedClass>com.mutation.Year</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>5</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
</mutations>
